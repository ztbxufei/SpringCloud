#端口号
server:
  port: 8084

#服务名称
spring:
  application:
    name: search-service
   #数据库信息
  datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://10.10.0.139:3306/mysql
      username: ztbdb
      password: 123456
      testWhileIdle: true # 验证连接的有效性
      testOnBorrow: false # 获取连接时候验证，会影响性能
      testOnReturn: false # 在连接归还到连接池时是否测试该连接
      validationQuery: SELECT 1 FROM DUAL
      timeBetweenEvictionRunsMillis: 300000 # 空闲连接回收的时间间隔，与testWhileIdle一起使用，设置5分钟
      minEvictableIdleTimeMillis: 1800000 # 连接池空闲连接的有效时间 ，设置30分钟
      initialSize: 5 # 初始化连接池大小
      maxActive: 50 # 指定连接池中最大的活跃连接数.
      maxWait: 60000 # 指定连接池等待连接返回的最大等待时间，毫秒单位.
      minIdle: 5 # 指定必须保持连接的最小值
#  data:
#    elasticsearch:
#      cluster-name: elasticsearch
#      cluster-nodes: 10.10.1.156:9300
  jackson:
    default-property-inclusion: non_null # 把是null的值排除

# 设置服务发现者（配置服务注册地址）
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
      prefer-ip-address: true
      ip-address: ${spring.cloud.client.ip-address}
      instance-id: ${spring.cloud.client.ip-address}:${server.port}
#  instance:
#    lease-renewal-interval-in-seconds: 5 # 每隔5秒发送一次心跳
#    lease-expiration-duration-in-seconds: 10 # 10秒不发送就过期
#    prefer-ip-address: true
#    ip-address: 10.10.1.156
#    instance-id: ${spring.application.name}:${server.port}
# 开启熔断器
feign:
  hystrix:
    enabled: true

#自定义负载均衡策略
#策略选择：
#    1、如果每个机器配置一样，则建议不修改策略 (推荐)
#    2、如果部分机器配置强，则可以改为 WeightedResponseTimeRule
product-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #当前策略是随机策略


#设置服务调用超时时间（推荐设置2秒） 默认optons readtimeout是60，但是由于hystrix默认是1秒超时
feign:
  client:
    config:
      default:
        connectTimeout: 2000
        readTimeout: 2000
        loggerLevel: basic

# mybatis 配置
mybatis:
  mapperLocations: classpath:/mapper/*.xml
